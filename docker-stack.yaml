services:
  traefik:
    image: traefik:v3.1.4
    container_name: Traefik-reverse-proxy
    ports:
      # Only listen to default browser ports for now
      - "80:80"
      - "443:443"
    command:
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"

      # Use docker as my provider
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock" # Because I know my vps is linux I use this path

      # Create my main HTTPS entrypoint named websecure
      - "--entryPoints.websecure.address=:443"
      # Create my secondary HTTP entrypoint named web
      - "--entrypoints.web.address=:80"
      # Configure HTTP redirection 
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      # Configure cloudflare resolver
      - "--certificatesresolvers.cloudflare.acme.email=johannes.christel@outlook.de" # Use Environment variable for this
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/cloudflare-acme.json"
      - "--certificatesresolvers.cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.cloudflare.acme.keytype=EC256"
      # Convigure ACME dns-challenge settings
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN} # Grab cloudflare token from environment
    volumes:
      # This volume mount is only possible, because I know this is the correct path on my vps
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Use the shared certificates volume
      - traefik_certs:/letsencrypt
    restart: unless-stopped
  
  cert-dumper:
    # Latest version on creation of this
    image: ldez/traefik-certs-dumper:v2.9.3
    container_name: traefik-certs-dumper
    # Run the following script on startup
    entrypoint: sh -c '
      while ! [ -e /letsencrypt/cloudflare-acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /letsencrypt/cloudflare-acme.json | jq -s "add" ` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch --domain-subdir
      --source /letsencrypt/cloudflare-acme.json --dest /letsencrypt'
    labels:
      # No routing for this one
      - traefik.enable=false
    volumes:
      # Use the shared certificates volume
      - traefik_certs:/letsencrypt

  themover-web:
    container_name: "TheMover-Web"
    image: ghcr.io/jojochr/the-mover_web:${GIT_COMMIT_HASH:-latest}
    ports:
      # Web Frontend
      - mode: host
        protocol: tcp
        published: 4999
        target: 4999
    labels:
      - traefik.enable=true

      # Create traefik router to reroute
      - traefik.http.routers.themover-web.rule=Host(`themover.site`)
      - traefik.http.routers.themover-web.tls=true
      - traefik.http.routers.themover-web.tls.certresolver=cloudflare
      - traefik.http.routers.themover-web.entrypoints=websecure
      - traefik.http.routers.themover-web.service=web-service
      - traefik.http.services.web-service.loadbalancer.server.port=4999
    volumes:
      - traefik_certs:/letsencrypt
    restart: unless-stopped

  themover-api:
    container_name: "TheMover-API"
    image: ghcr.io/jojochr/the-mover_api:${GIT_COMMIT_HASH:-latest}
    ports:
      # REST-API Port
      - mode: host
        protocol: tcp
        published: 5000 #Facing the public
        target: 5000    #Mapped to port inside the container
      # GRPC-Interface Port
      - mode: host
        protocol: tcp
        published: 5001 #Facing the public
        target: 5001    #Mapped to port inside the container
    labels:
      - traefik.enable=true

      # Create traefik router to reroute rest-api requests to the correct container port
      - traefik.http.routers.themover-restapi.rule=Host(`api.themover.site`)
      - traefik.http.routers.themover-restapi.tls=true
      - traefik.http.routers.themover-restapi.tls.certresolver=cloudflare
      - traefik.http.routers.themover-restapi.entrypoints=websecure
      - traefik.http.routers.themover-restapi.service=restapi-service
      - traefik.http.services.restapi-service.loadbalancer.server.port=5000
      
      # Create traefik router to reroute grpc requests to the correct container port
      - traefik.http.routers.themover-grpc.rule=Host(`grpc.themover.site`)
      - traefik.http.routers.themover-grpc.tls=true
      - traefik.http.routers.themover-grpc.tls.certresolver=cloudflare
      - traefik.http.routers.themover-grpc.entrypoints=websecure
      - traefik.http.routers.themover-grpc.service=grpc-service
      - traefik.http.services.grpc-service.loadbalancer.server.port=5001
    volumes:
      # Use the shared certificates volume
      - traefik_certs:/letsencrypt
    restart: unless-stopped

volumes:
  traefik_certs:
